name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request: {}
  workflow_dispatch: {}

jobs:
  ci:
    uses: upbound/uptest/.github/workflows/provider-ci.yml@standard-runners
    with:
      go-version: "1.21"
      golangci-skip: true # we will run the linter via "make lint"
      cleanup-disk: true
    secrets:
      UPBOUND_MARKETPLACE_PUSH_ROBOT_USR: ${{ secrets.UPBOUND_MARKETPLACE_PUSH_ROBOT_USR }}
      UPBOUND_MARKETPLACE_PUSH_ROBOT_PSW: ${{ secrets.UPBOUND_MARKETPLACE_PUSH_ROBOT_PSW }}

  detect-noop:
    runs-on: ubuntu-22.04
    outputs:
      noop: ${{ steps.noop.outputs.should_skip }}
    steps:
      - name: Detect No-op Changes
        id: noop
        uses: fkirc/skip-duplicate-actions@12aca0a884f6137d619d6a8a09fcc3406ced5281 # v5.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          paths_ignore: '["**.md", "**.png", "**.jpg"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'

  lint:
    runs-on: ubuntu-22.04
    needs: detect-noop
    if: needs.detect-noop.outputs.noop != 'true'

    steps:
      - name: Cleanup Disk
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          android: true
          dotnet: true
          haskell: true
          tool-cache: true
          large-packages: false
          swap-storage: false

      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
        with:
          go-version: "1.21"

      - name: Find the Go Build Cache
        id: go_cache
        run: |
          echo "cache=$(make go.cachedir)" >> $GITHUB_OUTPUT && \
          echo "mod_cache=$(make go.mod.cachedir)" >> $GITHUB_OUTPUT && \
          echo "analysis_cache=$HOME/.cache/golangci-lint" >> $GITHUB_OUTPUT && \
          echo "analysis_cache_key=$(make go.lint.analysiskey)" >> $GITHUB_OUTPUT && \
          echo "analysis_cache_key_int=$(make go.lint.analysiskey-interval)" >> $GITHUB_OUTPUT
          

      - name: Cache the Go Build Cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ${{ steps.go_cache.outputs.cache }}
          key: ${{ runner.os }}-build-lint-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-lint-

      - name: Cache Go Dependencies
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        with:
          path: ${{ steps.go_cache.outputs.mod_cache }}
          key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-pkg-

      - name: Cache Linter Analysis
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        id: cache-analysis
        with:
          path: ${{ steps.go_cache.outputs.analysis_cache }}
          key: ${{ steps.go_cache.outputs.analysis_cache_key }}
          restore-keys: |
            ${{ steps.go_cache.outputs.analysis_cache_key_int }}

      - name: Vendor Dependencies
        run: make vendor vendor.check

      - name: Lint
        env:
          GOLANGCI_LINT_CACHE: ${{ steps.go_cache.outputs.analysis_cache }}
          SKIP_LINTER_ANALYSIS: false
          RUN_BUILDTAGGER: true
        run: make lint