name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request: {}
  workflow_dispatch: {}

jobs:
  ci:
    uses: ulucinar/uptest/.github/workflows/provider-ci.yml@tagger
    with:
      go-version: "1.21"
      golangci-skip: true # we will run the linter via "make lint"
    secrets:
      UPBOUND_MARKETPLACE_PUSH_ROBOT_USR: ${{ secrets.UPBOUND_MARKETPLACE_PUSH_ROBOT_USR }}
      UPBOUND_MARKETPLACE_PUSH_ROBOT_PSW: ${{ secrets.UPBOUND_MARKETPLACE_PUSH_ROBOT_PSW }}

  lint:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
        with:
          go-version: "1.21"

      #      - name: Find the Go Build Cache
      #        id: go
      #        run: echo "cache=$(make go.cachedir)" >> $GITHUB_OUTPUT
      #
      #      - name: Cache the Go Build Cache
      #        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
      #        with:
      #          path: ${{ steps.go.outputs.cache }}
      #          key: ${{ runner.os }}-build-lint-${{ hashFiles('**/go.sum') }}
      #          restore-keys: ${{ runner.os }}-build-lint-

      - name: Vendor Dependencies
        run: make vendor vendor.check

      # We could run 'make lint' but we prefer this action because it leaves
      # 'annotations' (i.e. it comments on PRs to point out linter violations).
      - name: Lint
        run: make lint